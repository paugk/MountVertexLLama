// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v1.8.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:426


#include "MountVertexLLamaBaseC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "MountVertexLLamaBaseC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_CONTROL_LONGSEQ__ARG_TRAITS_)
#define _CONTROL_LONGSEQ__ARG_TRAITS_
  
  template<>
  class Arg_Traits<Control::LongSeq>
    : public
        Var_Size_Arg_Traits_T<
            Control::LongSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:136

#if !defined (_ACS_ROPATTERN__ARG_TRAITS_)
#define _ACS_ROPATTERN__ARG_TRAITS_
  
  template<>
  class  Arg_Traits<ACS::ROpattern>
    : public
        Object_Arg_Traits_T<
            ACS::ROpattern_ptr,
            ACS::ROpattern_var,
            ACS::ROpattern_out,
            TAO::Objref_Traits<ACS::ROpattern>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:136

#if !defined (_ACS_ROLONGSEQ__ARG_TRAITS_)
#define _ACS_ROLONGSEQ__ARG_TRAITS_
  
  template<>
  class  Arg_Traits<ACS::ROlongSeq>
    : public
        Object_Arg_Traits_T<
            ACS::ROlongSeq_ptr,
            ACS::ROlongSeq_var,
            ACS::ROlongSeq_out,
            TAO::Objref_Traits<ACS::ROlongSeq>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:136

#if !defined (_ACS_ROLONG__ARG_TRAITS_)
#define _ACS_ROLONG__ARG_TRAITS_
  
  template<>
  class  Arg_Traits<ACS::ROlong>
    : public
        Object_Arg_Traits_T<
            ACS::ROlong_ptr,
            ACS::ROlong_var,
            ACS::ROlong_out,
            TAO::Objref_Traits<ACS::ROlong>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for Control::MountVertexLLamaBase.

Control::MountVertexLLamaBase_ptr
TAO::Objref_Traits<Control::MountVertexLLamaBase>::duplicate (
    Control::MountVertexLLamaBase_ptr p)
{
  return Control::MountVertexLLamaBase::_duplicate (p);
}

void
TAO::Objref_Traits<Control::MountVertexLLamaBase>::release (
    Control::MountVertexLLamaBase_ptr p)
{
  ::CORBA::release (p);
}

Control::MountVertexLLamaBase_ptr
TAO::Objref_Traits<Control::MountVertexLLamaBase>::nil (void)
{
  return Control::MountVertexLLamaBase::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Control::MountVertexLLamaBase>::marshal (
    const Control::MountVertexLLamaBase_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Control__TAO_MountVertexLLamaBase_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj) = 0;

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_DELTAS_DISP (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_DELTAS_DISP",
      21,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_DELTAS_SPEM (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_DELTAS_SPEM",
      21,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_DELTAS_TILT (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_DELTAS_TILT",
      21,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_DELTAS_TILTTEMP (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_DELTAS_TILTTEMP",
      25,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_TEMPS_19 (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_TEMPS_19",
      18,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_TEMPS_1A (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_TEMPS_1A",
      18,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_TEMPS_1B (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_TEMPS_1B",
      18,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_TEMPS_1C (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_TEMPS_1C",
      18,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_TEMPS_1D (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_TEMPS_1D",
      18,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_TEMPS_1E (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_TEMPS_1E",
      18,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::METR_TEMPS_1F (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_METR_TEMPS_1F",
      18,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::SUBREF_DELTA_ROT (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_SUBREF_DELTA_ROT",
      21,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROpattern_ptr
Control::MountVertexLLamaBase::OTHER_STATUS (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROpattern>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_OTHER_STATUS",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROpattern_ptr
Control::MountVertexLLamaBase::UPS2_ALARMS (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROpattern>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS2_ALARMS",
      16,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::UPS2_BATTERY_OUTPUT (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS2_BATTERY_OUTPUT",
      24,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::UPS2_BATTERY_STATUS (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS2_BATTERY_STATUS",
      24,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::UPS2_BYPASS_VOLTS (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS2_BYPASS_VOLTS",
      22,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::UPS2_FREQS (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS2_FREQS",
      15,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlong_ptr
Control::MountVertexLLamaBase::UPS1_INVERTER_SW (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlong>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS1_INVERTER_SW",
      21,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlong_ptr
Control::MountVertexLLamaBase::UPS2_INVERTER_SW (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlong>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS2_INVERTER_SW",
      21,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::UPS2_INVERTER_VOLTS (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS2_INVERTER_VOLTS",
      24,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::UPS2_OUTPUT_CURRENT (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS2_OUTPUT_CURRENT",
      24,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlongSeq_ptr
Control::MountVertexLLamaBase::UPS2_OUTPUT_VOLTS (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlongSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS2_OUTPUT_VOLTS",
      22,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlong_ptr
Control::MountVertexLLamaBase::UPS_STATUS_1 (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlong>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS_STATUS_1",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::ACS::ROlong_ptr
Control::MountVertexLLamaBase::UPS_STATUS_2 (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACS::ROlong>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_UPS_STATUS_2",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
Control::MountVertexLLamaBase::GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER",
      44,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
Control::MountVertexLLamaBase::GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN",
      40,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
Control::MountVertexLLamaBase::GET_EMERGENCY_STOP_NASMYTH_CABINS_AB (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_EMERGENCY_STOP_NASMYTH_CABINS_AB_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_EMERGENCY_STOP_NASMYTH_CABINS_AB",
      36,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_EMERGENCY_STOP_NASMYTH_CABINS_AB_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
Control::MountVertexLLamaBase::GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL",
      53,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
Control::MountVertexLLamaBase::GET_EMERGENCY_STOP_CONTROL_CONTAINER (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_EMERGENCY_STOP_CONTROL_CONTAINER_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_EMERGENCY_STOP_CONTROL_CONTAINER",
      36,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_EMERGENCY_STOP_CONTROL_CONTAINER_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
Control::MountVertexLLamaBase::GET_COMMUNICATION_ERROR_ACU_UPS2 (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_COMMUNICATION_ERROR_ACU_UPS2_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_COMMUNICATION_ERROR_ACU_UPS2",
      32,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_COMMUNICATION_ERROR_ACU_UPS2_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_DELTAS_DISP (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_DELTAS_DISP_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_DELTAS_DISP",
      20,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_DELTAS_DISP_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_DELTAS_SPEM (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_DELTAS_SPEM_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_DELTAS_SPEM",
      20,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_DELTAS_SPEM_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_DELTAS_TILT (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_DELTAS_TILT_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_DELTAS_TILT",
      20,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_DELTAS_TILT_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_DELTAS_TILTTEMP (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_DELTAS_TILTTEMP_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_DELTAS_TILTTEMP",
      24,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_DELTAS_TILTTEMP_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_TEMPS_19 (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_19_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_TEMPS_19",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_19_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_TEMPS_1A (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1A_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_TEMPS_1A",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1A_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_TEMPS_1B (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1B_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_TEMPS_1B",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1B_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_TEMPS_1C (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1C_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_TEMPS_1C",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1C_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_TEMPS_1D (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1D_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_TEMPS_1D",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1D_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_TEMPS_1E (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1E_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_TEMPS_1E",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1E_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_METR_TEMPS_1F (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1F_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_METR_TEMPS_1F",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_METR_TEMPS_1F_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_SUBREF_DELTA_ROT (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_SUBREF_DELTA_ROT_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_SUBREF_DELTA_ROT",
      20,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_SUBREF_DELTA_ROT_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Long
Control::MountVertexLLamaBase::GET_OTHER_STATUS (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::Long>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_OTHER_STATUS_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_OTHER_STATUS",
      16,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_OTHER_STATUS_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_UPS2_ALARMS (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS2_ALARMS_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS2_ALARMS",
      15,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS2_ALARMS_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_UPS2_BATTERY_OUTPUT (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS2_BATTERY_OUTPUT_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS2_BATTERY_OUTPUT",
      23,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS2_BATTERY_OUTPUT_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_UPS2_BATTERY_STATUS (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS2_BATTERY_STATUS_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS2_BATTERY_STATUS",
      23,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS2_BATTERY_STATUS_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_UPS2_BYPASS_VOLTS (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS2_BYPASS_VOLTS_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS2_BYPASS_VOLTS",
      21,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS2_BYPASS_VOLTS_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_UPS2_FREQS (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS2_FREQS_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS2_FREQS",
      14,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS2_FREQS_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Long
Control::MountVertexLLamaBase::GET_UPS1_INVERTER_SW (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::Long>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS1_INVERTER_SW_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS1_INVERTER_SW",
      20,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS1_INVERTER_SW_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Long
Control::MountVertexLLamaBase::GET_UPS2_INVERTER_SW (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::Long>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS2_INVERTER_SW_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS2_INVERTER_SW",
      20,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS2_INVERTER_SW_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_UPS2_INVERTER_VOLTS (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS2_INVERTER_VOLTS_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS2_INVERTER_VOLTS",
      23,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS2_INVERTER_VOLTS_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_UPS2_OUTPUT_CURRENT (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS2_OUTPUT_CURRENT_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS2_OUTPUT_CURRENT",
      23,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS2_OUTPUT_CURRENT_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::Control::LongSeq *
Control::MountVertexLLamaBase::GET_UPS2_OUTPUT_VOLTS (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::Control::LongSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS2_OUTPUT_VOLTS_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS2_OUTPUT_VOLTS",
      21,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS2_OUTPUT_VOLTS_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Long
Control::MountVertexLLamaBase::GET_UPS_STATUS_1 (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::Long>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS_STATUS_1_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS_STATUS_1",
      16,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS_STATUS_1_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Long
Control::MountVertexLLamaBase::GET_UPS_STATUS_2 (
  ::ACS::Time_out timestamp)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::Long>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACS::Time>::out_arg_val _tao_timestamp (timestamp);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_timestamp
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_GET_UPS_STATUS_2_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "GET_UPS_STATUS_2",
      16,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_GET_UPS_STATUS_2_exceptiondata,
      2
    );
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

void
Control::MountVertexLLamaBase::SET_SUBREF_DELTA_ROT (
  const ::Control::LongSeq & world)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Control::LongSeq>::in_arg_val _tao_world (world);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_world
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_SET_SUBREF_DELTA_ROT_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "SET_SUBREF_DELTA_ROT",
      20,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_SET_SUBREF_DELTA_ROT_exceptiondata,
      2
    );
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

void
Control::MountVertexLLamaBase::SET_SELFTEST_STOP (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ == 0)
    {
      Control_MountVertexLLamaBase_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  static TAO::Exception_Data
  _tao_Control_MountVertexLLamaBase_SET_SELFTEST_STOP_exceptiondata [] = 
    {
      {
        "IDL:alma/ControlExceptions/CAMBErrorEx:1.0",
        ControlExceptions::CAMBErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_CAMBErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      },
      
      {
        "IDL:alma/ControlExceptions/INACTErrorEx:1.0",
        ControlExceptions::INACTErrorEx::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ControlExceptions::_tc_INACTErrorEx
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "SET_SELFTEST_STOP",
      17,
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_Control_MountVertexLLamaBase_SET_SELFTEST_STOP_exceptiondata,
      2
    );
}

Control::MountVertexLLamaBase::MountVertexLLamaBase (void)
 : the_TAO_MountVertexLLamaBase_Proxy_Broker_ (0)
{
  this->Control_MountVertexLLamaBase_setup_collocation ();
}

void
Control::MountVertexLLamaBase::Control_MountVertexLLamaBase_setup_collocation ()
{
  if (::Control__TAO_MountVertexLLamaBase_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_MountVertexLLamaBase_Proxy_Broker_ =
        ::Control__TAO_MountVertexLLamaBase_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->Control_MountVertex_setup_collocation ();
}

Control::MountVertexLLamaBase::~MountVertexLLamaBase (void)
{}

void 
Control::MountVertexLLamaBase::_tao_any_destructor (void *_tao_void_pointer)
{
  MountVertexLLamaBase *_tao_tmp_pointer =
    static_cast<MountVertexLLamaBase *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

Control::MountVertexLLamaBase_ptr
Control::MountVertexLLamaBase::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<MountVertexLLamaBase>::narrow (
        _tao_objref,
        "IDL:alma/Control/MountVertexLLamaBase:1.0",
        Control__TAO_MountVertexLLamaBase_Proxy_Broker_Factory_function_pointer
      );
}

Control::MountVertexLLamaBase_ptr
Control::MountVertexLLamaBase::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<MountVertexLLamaBase>::unchecked_narrow (
        _tao_objref,
        "IDL:alma/Control/MountVertexLLamaBase:1.0",
        Control__TAO_MountVertexLLamaBase_Proxy_Broker_Factory_function_pointer
      );
}

Control::MountVertexLLamaBase_ptr
Control::MountVertexLLamaBase::_duplicate (MountVertexLLamaBase_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void
Control::MountVertexLLamaBase::_tao_release (MountVertexLLamaBase_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Control::MountVertexLLamaBase::_is_a (const char *value)
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:alma/ACS/ACSComponent:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:alma/ACS/CharacteristicModel:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:alma/ACS/CharacteristicComponent:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:alma/Control/ControlDevice:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:alma/Control/HardwareDevice:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:alma/Control/MountBase:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:alma/Control/Mount:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:alma/Control/MountVertexBase:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:alma/Control/MountVertex:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:alma/Control/MountVertexLLamaBase:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Control::MountVertexLLamaBase::_interface_repository_id (void) const
{
  return "IDL:alma/Control/MountVertexLLamaBase:1.0";
}

::CORBA::Boolean
Control::MountVertexLLamaBase::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_Control_MountVertexLLamaBase (
    ::CORBA::tk_objref,
    "IDL:alma/Control/MountVertexLLamaBase:1.0",
    "MountVertexLLamaBase");
  

namespace Control
{
  ::CORBA::TypeCode_ptr const _tc_MountVertexLLamaBase =
    &_tao_tc_Control_MountVertexLLamaBase;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:49
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<Control::MountVertexLLamaBase>::to_object (
      ::CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Control
{
  
  
  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MountVertexLLamaBase_ptr _tao_elem)
  {
    MountVertexLLamaBase_ptr _tao_objptr =
      MountVertexLLamaBase::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }
  
  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MountVertexLLamaBase_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<MountVertexLLamaBase>::insert (
        _tao_any,
        MountVertexLLamaBase::_tao_any_destructor,
        _tc_MountVertexLLamaBase,
        *_tao_elem)
  }
  
  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      MountVertexLLamaBase_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<MountVertexLLamaBase>::extract (
          _tao_any,
          MountVertexLLamaBase::_tao_any_destructor,
          _tc_MountVertexLLamaBase,
          _tao_elem)
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    Control::MountVertexLLamaBase_ptr _tao_elem)
{
  Control::MountVertexLLamaBase_ptr _tao_objptr =
    Control::MountVertexLLamaBase::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    Control::MountVertexLLamaBase_ptr *_tao_elem)
{
  TAO::Any_Impl_T<Control::MountVertexLLamaBase>::insert (
      _tao_any,
      Control::MountVertexLLamaBase::_tao_any_destructor,
      Control::_tc_MountVertexLLamaBase,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    Control::MountVertexLLamaBase_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<Control::MountVertexLLamaBase>::extract (
        _tao_any,
        Control::MountVertexLLamaBase::_tao_any_destructor,
        Control::_tc_MountVertexLLamaBase,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:54

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Control::MountVertexLLamaBase_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Control::MountVertexLLamaBase_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::Control::MountVertexLLamaBase RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        Control__TAO_MountVertexLLamaBase_Proxy_Broker_Factory_function_pointer
      );
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



