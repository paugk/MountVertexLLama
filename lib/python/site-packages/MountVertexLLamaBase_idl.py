# Python stubs generated by omniidl from /home/almamgr/alma-src/2014-04-B/CONTROL/Device/HardwareDevice/MOUNT/MountVertexLLama/src/../idl/MountVertexLLamaBase.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "acserr.idl"
import acserr_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
# #include "acscommon.idl"
import acscommon_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")
_0_log_audience = omniORB.openModule("log_audience")
_0_log_audience__POA = omniORB.openModule("log_audience__POA")
_0_acscommon = omniORB.openModule("acscommon")
_0_acscommon__POA = omniORB.openModule("acscommon__POA")
# #include "ControlSimpleTypeDefs.idl"
import ControlSimpleTypeDefs_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "ControlExceptions.idl"
import ControlExceptions_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_ControlExceptions = omniORB.openModule("ControlExceptions")
_0_ControlExceptions__POA = omniORB.openModule("ControlExceptions__POA")
# #include "ControlDeviceExceptions.idl"
import ControlDeviceExceptions_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_ControlDeviceExceptions = omniORB.openModule("ControlDeviceExceptions")
_0_ControlDeviceExceptions__POA = omniORB.openModule("ControlDeviceExceptions__POA")
# #include "corbaidl.idl"
import corbaidl_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")
# #include "boxes.idl"
import boxes_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")
# #include "CosProperty.idl"
import CosProperty_idl
_0_CosPropertyService = omniORB.openModule("CosPropertyService")
_0_CosPropertyService__POA = omniORB.openModule("CosPropertyService__POA")
# #include "acscomponent.idl"
import acscomponent_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")
# #include "baciErrTypeProperty.idl"
import baciErrTypeProperty_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_baciErrTypeProperty = omniORB.openModule("baciErrTypeProperty")
_0_baciErrTypeProperty__POA = omniORB.openModule("baciErrTypeProperty__POA")
# #include "baci.idl"
import baci_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")
# #include "ControlDevice.idl"
import ControlDevice_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "HardwareDevice.idl"
import HardwareDevice_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "asdmIDLTypes.idl"
import asdmIDLTypes_idl
_0_asdmIDLTypes = omniORB.openModule("asdmIDLTypes")
_0_asdmIDLTypes__POA = omniORB.openModule("asdmIDLTypes__POA")
# #include "TMCDBDataStructures.idl"
import TMCDBDataStructures_idl
_0_TMCDB_IDL = omniORB.openModule("TMCDB_IDL")
_0_TMCDB_IDL__POA = omniORB.openModule("TMCDB_IDL__POA")
# #include "TmcdbErrType.idl"
import TmcdbErrType_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_TmcdbErrType = omniORB.openModule("TmcdbErrType")
_0_TmcdbErrType__POA = omniORB.openModule("TmcdbErrType__POA")
# #include "almaEnumerations_IF.idl"
import almaEnumerations_IF_idl
_0_AssociatedCalNatureMod = omniORB.openModule("AssociatedCalNatureMod")
_0_AssociatedCalNatureMod__POA = omniORB.openModule("AssociatedCalNatureMod__POA")
_0_PolarizationTypeMod = omniORB.openModule("PolarizationTypeMod")
_0_PolarizationTypeMod__POA = omniORB.openModule("PolarizationTypeMod__POA")
_0_SyscalMethodMod = omniORB.openModule("SyscalMethodMod")
_0_SyscalMethodMod__POA = omniORB.openModule("SyscalMethodMod__POA")
_0_CalCurveTypeMod = omniORB.openModule("CalCurveTypeMod")
_0_CalCurveTypeMod__POA = omniORB.openModule("CalCurveTypeMod__POA")
_0_CalDataOriginMod = omniORB.openModule("CalDataOriginMod")
_0_CalDataOriginMod__POA = omniORB.openModule("CalDataOriginMod__POA")
_0_CalTypeMod = omniORB.openModule("CalTypeMod")
_0_CalTypeMod__POA = omniORB.openModule("CalTypeMod__POA")
_0_ScanIntentMod = omniORB.openModule("ScanIntentMod")
_0_ScanIntentMod__POA = omniORB.openModule("ScanIntentMod__POA")
_0_StokesParameterMod = omniORB.openModule("StokesParameterMod")
_0_StokesParameterMod__POA = omniORB.openModule("StokesParameterMod__POA")
_0_FluxCalibrationMethodMod = omniORB.openModule("FluxCalibrationMethodMod")
_0_FluxCalibrationMethodMod__POA = omniORB.openModule("FluxCalibrationMethodMod__POA")
_0_CalibrationModeMod = omniORB.openModule("CalibrationModeMod")
_0_CalibrationModeMod__POA = omniORB.openModule("CalibrationModeMod__POA")
_0_FocusMethodMod = omniORB.openModule("FocusMethodMod")
_0_FocusMethodMod__POA = omniORB.openModule("FocusMethodMod__POA")
_0_PointingMethodMod = omniORB.openModule("PointingMethodMod")
_0_PointingMethodMod__POA = omniORB.openModule("PointingMethodMod__POA")
_0_WindowFunctionMod = omniORB.openModule("WindowFunctionMod")
_0_WindowFunctionMod__POA = omniORB.openModule("WindowFunctionMod__POA")
_0_AssociatedFieldNatureMod = omniORB.openModule("AssociatedFieldNatureMod")
_0_AssociatedFieldNatureMod__POA = omniORB.openModule("AssociatedFieldNatureMod__POA")
_0_ProcessorTypeMod = omniORB.openModule("ProcessorTypeMod")
_0_ProcessorTypeMod__POA = omniORB.openModule("ProcessorTypeMod__POA")
_0_SourceModelMod = omniORB.openModule("SourceModelMod")
_0_SourceModelMod__POA = omniORB.openModule("SourceModelMod__POA")
_0_NetSidebandMod = omniORB.openModule("NetSidebandMod")
_0_NetSidebandMod__POA = omniORB.openModule("NetSidebandMod__POA")
_0_ReceiverSidebandMod = omniORB.openModule("ReceiverSidebandMod")
_0_ReceiverSidebandMod__POA = omniORB.openModule("ReceiverSidebandMod__POA")
_0_SidebandProcessingModeMod = omniORB.openModule("SidebandProcessingModeMod")
_0_SidebandProcessingModeMod__POA = omniORB.openModule("SidebandProcessingModeMod__POA")
_0_SwitchingModeMod = omniORB.openModule("SwitchingModeMod")
_0_SwitchingModeMod__POA = omniORB.openModule("SwitchingModeMod__POA")
_0_StationTypeMod = omniORB.openModule("StationTypeMod")
_0_StationTypeMod__POA = omniORB.openModule("StationTypeMod__POA")
_0_SubscanIntentMod = omniORB.openModule("SubscanIntentMod")
_0_SubscanIntentMod__POA = omniORB.openModule("SubscanIntentMod__POA")
_0_BasebandNameMod = omniORB.openModule("BasebandNameMod")
_0_BasebandNameMod__POA = omniORB.openModule("BasebandNameMod__POA")
_0_AxisNameMod = omniORB.openModule("AxisNameMod")
_0_AxisNameMod__POA = omniORB.openModule("AxisNameMod__POA")
_0_DataContentMod = omniORB.openModule("DataContentMod")
_0_DataContentMod__POA = omniORB.openModule("DataContentMod__POA")
_0_AtmPhaseCorrectionMod = omniORB.openModule("AtmPhaseCorrectionMod")
_0_AtmPhaseCorrectionMod__POA = omniORB.openModule("AtmPhaseCorrectionMod__POA")
_0_PrimitiveDataTypeMod = omniORB.openModule("PrimitiveDataTypeMod")
_0_PrimitiveDataTypeMod__POA = omniORB.openModule("PrimitiveDataTypeMod__POA")
_0_CorrelationModeMod = omniORB.openModule("CorrelationModeMod")
_0_CorrelationModeMod__POA = omniORB.openModule("CorrelationModeMod__POA")
_0_WVRMethodMod = omniORB.openModule("WVRMethodMod")
_0_WVRMethodMod__POA = omniORB.openModule("WVRMethodMod__POA")
_0_AccumModeMod = omniORB.openModule("AccumModeMod")
_0_AccumModeMod__POA = omniORB.openModule("AccumModeMod__POA")
_0_AntennaTypeMod = omniORB.openModule("AntennaTypeMod")
_0_AntennaTypeMod__POA = omniORB.openModule("AntennaTypeMod__POA")
_0_AntennaMakeMod = omniORB.openModule("AntennaMakeMod")
_0_AntennaMakeMod__POA = omniORB.openModule("AntennaMakeMod__POA")
_0_PositionMethodMod = omniORB.openModule("PositionMethodMod")
_0_PositionMethodMod__POA = omniORB.openModule("PositionMethodMod__POA")
_0_PointingModelModeMod = omniORB.openModule("PointingModelModeMod")
_0_PointingModelModeMod__POA = omniORB.openModule("PointingModelModeMod__POA")
_0_InvalidatingConditionMod = omniORB.openModule("InvalidatingConditionMod")
_0_InvalidatingConditionMod__POA = omniORB.openModule("InvalidatingConditionMod__POA")
_0_SchedulerModeMod = omniORB.openModule("SchedulerModeMod")
_0_SchedulerModeMod__POA = omniORB.openModule("SchedulerModeMod__POA")
_0_FieldCodeMod = omniORB.openModule("FieldCodeMod")
_0_FieldCodeMod__POA = omniORB.openModule("FieldCodeMod__POA")
_0_HolographyChannelTypeMod = omniORB.openModule("HolographyChannelTypeMod")
_0_HolographyChannelTypeMod__POA = omniORB.openModule("HolographyChannelTypeMod__POA")
_0_ProcessorSubTypeMod = omniORB.openModule("ProcessorSubTypeMod")
_0_ProcessorSubTypeMod__POA = omniORB.openModule("ProcessorSubTypeMod__POA")
_0_ReceiverBandMod = omniORB.openModule("ReceiverBandMod")
_0_ReceiverBandMod__POA = omniORB.openModule("ReceiverBandMod__POA")
_0_SBTypeMod = omniORB.openModule("SBTypeMod")
_0_SBTypeMod__POA = omniORB.openModule("SBTypeMod__POA")
_0_SpectralResolutionTypeMod = omniORB.openModule("SpectralResolutionTypeMod")
_0_SpectralResolutionTypeMod__POA = omniORB.openModule("SpectralResolutionTypeMod__POA")
_0_DetectorBandTypeMod = omniORB.openModule("DetectorBandTypeMod")
_0_DetectorBandTypeMod__POA = omniORB.openModule("DetectorBandTypeMod__POA")
_0_FilterModeMod = omniORB.openModule("FilterModeMod")
_0_FilterModeMod__POA = omniORB.openModule("FilterModeMod__POA")
_0_CorrelationBitMod = omniORB.openModule("CorrelationBitMod")
_0_CorrelationBitMod__POA = omniORB.openModule("CorrelationBitMod__POA")
_0_ACAPolarizationMod = omniORB.openModule("ACAPolarizationMod")
_0_ACAPolarizationMod__POA = omniORB.openModule("ACAPolarizationMod__POA")
_0_CorrelatorCalibrationMod = omniORB.openModule("CorrelatorCalibrationMod")
_0_CorrelatorCalibrationMod__POA = omniORB.openModule("CorrelatorCalibrationMod__POA")
_0_CorrelatorNameMod = omniORB.openModule("CorrelatorNameMod")
_0_CorrelatorNameMod__POA = omniORB.openModule("CorrelatorNameMod__POA")
_0_TimeSamplingMod = omniORB.openModule("TimeSamplingMod")
_0_TimeSamplingMod__POA = omniORB.openModule("TimeSamplingMod__POA")
_0_CalibrationDeviceMod = omniORB.openModule("CalibrationDeviceMod")
_0_CalibrationDeviceMod__POA = omniORB.openModule("CalibrationDeviceMod__POA")
_0_AntennaMotionPatternMod = omniORB.openModule("AntennaMotionPatternMod")
_0_AntennaMotionPatternMod__POA = omniORB.openModule("AntennaMotionPatternMod__POA")
_0_CalibrationFunctionMod = omniORB.openModule("CalibrationFunctionMod")
_0_CalibrationFunctionMod__POA = omniORB.openModule("CalibrationFunctionMod__POA")
_0_CalibrationSetMod = omniORB.openModule("CalibrationSetMod")
_0_CalibrationSetMod__POA = omniORB.openModule("CalibrationSetMod__POA")
_0_PositionReferenceCodeMod = omniORB.openModule("PositionReferenceCodeMod")
_0_PositionReferenceCodeMod__POA = omniORB.openModule("PositionReferenceCodeMod__POA")
_0_DirectionReferenceCodeMod = omniORB.openModule("DirectionReferenceCodeMod")
_0_DirectionReferenceCodeMod__POA = omniORB.openModule("DirectionReferenceCodeMod__POA")
_0_BaselineReferenceCodeMod = omniORB.openModule("BaselineReferenceCodeMod")
_0_BaselineReferenceCodeMod__POA = omniORB.openModule("BaselineReferenceCodeMod__POA")
_0_FrequencyReferenceCodeMod = omniORB.openModule("FrequencyReferenceCodeMod")
_0_FrequencyReferenceCodeMod__POA = omniORB.openModule("FrequencyReferenceCodeMod__POA")
_0_RadialVelocityReferenceCodeMod = omniORB.openModule("RadialVelocityReferenceCodeMod")
_0_RadialVelocityReferenceCodeMod__POA = omniORB.openModule("RadialVelocityReferenceCodeMod__POA")
_0_DopplerReferenceCodeMod = omniORB.openModule("DopplerReferenceCodeMod")
_0_DopplerReferenceCodeMod__POA = omniORB.openModule("DopplerReferenceCodeMod__POA")
_0_CorrelatorTypeMod = omniORB.openModule("CorrelatorTypeMod")
_0_CorrelatorTypeMod__POA = omniORB.openModule("CorrelatorTypeMod__POA")
_0_DopplerTrackingModeMod = omniORB.openModule("DopplerTrackingModeMod")
_0_DopplerTrackingModeMod__POA = omniORB.openModule("DopplerTrackingModeMod__POA")
_0_TimeScaleMod = omniORB.openModule("TimeScaleMod")
_0_TimeScaleMod__POA = omniORB.openModule("TimeScaleMod__POA")
_0_DataScaleMod = omniORB.openModule("DataScaleMod")
_0_DataScaleMod__POA = omniORB.openModule("DataScaleMod__POA")
_0_WeightTypeMod = omniORB.openModule("WeightTypeMod")
_0_WeightTypeMod__POA = omniORB.openModule("WeightTypeMod__POA")
_0_PrimaryBeamDescriptionMod = omniORB.openModule("PrimaryBeamDescriptionMod")
_0_PrimaryBeamDescriptionMod__POA = omniORB.openModule("PrimaryBeamDescriptionMod__POA")
# #include "TMCDBComponent.idl"
import TMCDBComponent_idl
_0_TMCDB = omniORB.openModule("TMCDB")
_0_TMCDB__POA = omniORB.openModule("TMCDB__POA")
# #include "MountBase.idl"
import MountBase_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "MountError.idl"
import MountError_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_MountError = omniORB.openModule("MountError")
_0_MountError__POA = omniORB.openModule("MountError__POA")
# #include "ControlBasicInterfaces.idl"
import ControlBasicInterfaces_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "ControlAntennaInterfaces.idl"
import ControlAntennaInterfaces_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "DataCaptureInterfaces.idl"
import DataCaptureInterfaces_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "ControlArrayInterfaces.idl"
import ControlArrayInterfaces_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "xmlentity.idl"
import xmlentity_idl
_0_xmlentity = omniORB.openModule("xmlentity")
_0_xmlentity__POA = omniORB.openModule("xmlentity__POA")
# #include "archive_xmlstore_if.idl"
import archive_xmlstore_if_idl
_0_xmlstore = omniORB.openModule("xmlstore")
_0_xmlstore__POA = omniORB.openModule("xmlstore__POA")
# #include "ControlDataInterfaces.idl"
import ControlDataInterfaces_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "Mount.idl"
import Mount_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "MountVertexBase.idl"
import MountVertexBase_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")
# #include "MountVertex.idl"
import MountVertex_idl
_0_Control = omniORB.openModule("Control")
_0_Control__POA = omniORB.openModule("Control__POA")

#
# Start of module "Control"
#
__name__ = "Control"
_0_Control = omniORB.openModule("Control", r"/home/almamgr/alma-src/2014-04-B/CONTROL/Device/HardwareDevice/MOUNT/MountVertexLLama/src/../idl/MountVertexLLamaBase.idl")
_0_Control__POA = omniORB.openModule("Control__POA", r"/home/almamgr/alma-src/2014-04-B/CONTROL/Device/HardwareDevice/MOUNT/MountVertexLLama/src/../idl/MountVertexLLamaBase.idl")


# interface MountVertexLLamaBase
_0_Control._d_MountVertexLLamaBase = (omniORB.tcInternal.tv_objref, "IDL:alma/Control/MountVertexLLamaBase:1.0", "MountVertexLLamaBase")
omniORB.typeMapping["IDL:alma/Control/MountVertexLLamaBase:1.0"] = _0_Control._d_MountVertexLLamaBase
_0_Control.MountVertexLLamaBase = omniORB.newEmptyClass()
class MountVertexLLamaBase (_0_Control.MountVertex):
    _NP_RepositoryId = _0_Control._d_MountVertexLLamaBase[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Control.MountVertexLLamaBase = MountVertexLLamaBase
_0_Control._tc_MountVertexLLamaBase = omniORB.tcInternal.createTypeCode(_0_Control._d_MountVertexLLamaBase)
omniORB.registerType(MountVertexLLamaBase._NP_RepositoryId, _0_Control._d_MountVertexLLamaBase, _0_Control._tc_MountVertexLLamaBase)

# MountVertexLLamaBase operations and attributes
MountVertexLLamaBase._d__get_METR_DELTAS_DISP = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_METR_DELTAS_SPEM = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_METR_DELTAS_TILT = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_METR_DELTAS_TILTTEMP = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_METR_TEMPS_19 = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_METR_TEMPS_1A = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_METR_TEMPS_1B = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_METR_TEMPS_1C = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_METR_TEMPS_1D = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_METR_TEMPS_1E = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_METR_TEMPS_1F = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_SUBREF_DELTA_ROT = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_OTHER_STATUS = ((),(omniORB.typeMapping["IDL:alma/ACS/ROpattern:1.0"],),None)
MountVertexLLamaBase._d__get_UPS2_ALARMS = ((),(omniORB.typeMapping["IDL:alma/ACS/ROpattern:1.0"],),None)
MountVertexLLamaBase._d__get_UPS2_BATTERY_OUTPUT = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_UPS2_BATTERY_STATUS = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_UPS2_BYPASS_VOLTS = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_UPS2_FREQS = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_UPS1_INVERTER_SW = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlong:1.0"],),None)
MountVertexLLamaBase._d__get_UPS2_INVERTER_SW = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlong:1.0"],),None)
MountVertexLLamaBase._d__get_UPS2_INVERTER_VOLTS = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_UPS2_OUTPUT_CURRENT = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_UPS2_OUTPUT_VOLTS = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlongSeq:1.0"],),None)
MountVertexLLamaBase._d__get_UPS_STATUS_1 = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlong:1.0"],),None)
MountVertexLLamaBase._d__get_UPS_STATUS_2 = ((),(omniORB.typeMapping["IDL:alma/ACS/ROlong:1.0"],),None)
MountVertexLLamaBase._d_GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER = ((), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN = ((), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_EMERGENCY_STOP_NASMYTH_CABINS_AB = ((), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL = ((), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_EMERGENCY_STOP_CONTROL_CONTAINER = ((), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_COMMUNICATION_ERROR_ACU_UPS2 = ((), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_DELTAS_DISP = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_DELTAS_SPEM = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_DELTAS_TILT = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_DELTAS_TILTTEMP = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_TEMPS_19 = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_TEMPS_1A = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_TEMPS_1B = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_TEMPS_1C = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_TEMPS_1D = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_TEMPS_1E = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_METR_TEMPS_1F = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_SUBREF_DELTA_ROT = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_OTHER_STATUS = ((), (omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS2_ALARMS = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS2_BATTERY_OUTPUT = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS2_BATTERY_STATUS = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS2_BYPASS_VOLTS = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS2_FREQS = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS1_INVERTER_SW = ((), (omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS2_INVERTER_SW = ((), (omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS2_INVERTER_VOLTS = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS2_OUTPUT_CURRENT = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS2_OUTPUT_VOLTS = ((), (omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS_STATUS_1 = ((), (omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_GET_UPS_STATUS_2 = ((), (omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:alma/ACS/Time:1.0"]), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_SET_SUBREF_DELTA_ROT = ((omniORB.typeMapping["IDL:alma/Control/LongSeq:1.0"], ), (), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})
MountVertexLLamaBase._d_SET_SELFTEST_STOP = ((), (), {_0_ControlExceptions.CAMBErrorEx._NP_RepositoryId: _0_ControlExceptions._d_CAMBErrorEx, _0_ControlExceptions.INACTErrorEx._NP_RepositoryId: _0_ControlExceptions._d_INACTErrorEx})

# MountVertexLLamaBase object reference
class _objref_MountVertexLLamaBase (_0_Control._objref_MountVertex):
    _NP_RepositoryId = MountVertexLLamaBase._NP_RepositoryId

    def __init__(self):
        _0_Control._objref_MountVertex.__init__(self)

    def _get_METR_DELTAS_DISP(self, *args):
        return _omnipy.invoke(self, "_get_METR_DELTAS_DISP", _0_Control.MountVertexLLamaBase._d__get_METR_DELTAS_DISP, args)

    def _get_METR_DELTAS_SPEM(self, *args):
        return _omnipy.invoke(self, "_get_METR_DELTAS_SPEM", _0_Control.MountVertexLLamaBase._d__get_METR_DELTAS_SPEM, args)

    def _get_METR_DELTAS_TILT(self, *args):
        return _omnipy.invoke(self, "_get_METR_DELTAS_TILT", _0_Control.MountVertexLLamaBase._d__get_METR_DELTAS_TILT, args)

    def _get_METR_DELTAS_TILTTEMP(self, *args):
        return _omnipy.invoke(self, "_get_METR_DELTAS_TILTTEMP", _0_Control.MountVertexLLamaBase._d__get_METR_DELTAS_TILTTEMP, args)

    def _get_METR_TEMPS_19(self, *args):
        return _omnipy.invoke(self, "_get_METR_TEMPS_19", _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_19, args)

    def _get_METR_TEMPS_1A(self, *args):
        return _omnipy.invoke(self, "_get_METR_TEMPS_1A", _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1A, args)

    def _get_METR_TEMPS_1B(self, *args):
        return _omnipy.invoke(self, "_get_METR_TEMPS_1B", _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1B, args)

    def _get_METR_TEMPS_1C(self, *args):
        return _omnipy.invoke(self, "_get_METR_TEMPS_1C", _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1C, args)

    def _get_METR_TEMPS_1D(self, *args):
        return _omnipy.invoke(self, "_get_METR_TEMPS_1D", _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1D, args)

    def _get_METR_TEMPS_1E(self, *args):
        return _omnipy.invoke(self, "_get_METR_TEMPS_1E", _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1E, args)

    def _get_METR_TEMPS_1F(self, *args):
        return _omnipy.invoke(self, "_get_METR_TEMPS_1F", _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1F, args)

    def _get_SUBREF_DELTA_ROT(self, *args):
        return _omnipy.invoke(self, "_get_SUBREF_DELTA_ROT", _0_Control.MountVertexLLamaBase._d__get_SUBREF_DELTA_ROT, args)

    def _get_OTHER_STATUS(self, *args):
        return _omnipy.invoke(self, "_get_OTHER_STATUS", _0_Control.MountVertexLLamaBase._d__get_OTHER_STATUS, args)

    def _get_UPS2_ALARMS(self, *args):
        return _omnipy.invoke(self, "_get_UPS2_ALARMS", _0_Control.MountVertexLLamaBase._d__get_UPS2_ALARMS, args)

    def _get_UPS2_BATTERY_OUTPUT(self, *args):
        return _omnipy.invoke(self, "_get_UPS2_BATTERY_OUTPUT", _0_Control.MountVertexLLamaBase._d__get_UPS2_BATTERY_OUTPUT, args)

    def _get_UPS2_BATTERY_STATUS(self, *args):
        return _omnipy.invoke(self, "_get_UPS2_BATTERY_STATUS", _0_Control.MountVertexLLamaBase._d__get_UPS2_BATTERY_STATUS, args)

    def _get_UPS2_BYPASS_VOLTS(self, *args):
        return _omnipy.invoke(self, "_get_UPS2_BYPASS_VOLTS", _0_Control.MountVertexLLamaBase._d__get_UPS2_BYPASS_VOLTS, args)

    def _get_UPS2_FREQS(self, *args):
        return _omnipy.invoke(self, "_get_UPS2_FREQS", _0_Control.MountVertexLLamaBase._d__get_UPS2_FREQS, args)

    def _get_UPS1_INVERTER_SW(self, *args):
        return _omnipy.invoke(self, "_get_UPS1_INVERTER_SW", _0_Control.MountVertexLLamaBase._d__get_UPS1_INVERTER_SW, args)

    def _get_UPS2_INVERTER_SW(self, *args):
        return _omnipy.invoke(self, "_get_UPS2_INVERTER_SW", _0_Control.MountVertexLLamaBase._d__get_UPS2_INVERTER_SW, args)

    def _get_UPS2_INVERTER_VOLTS(self, *args):
        return _omnipy.invoke(self, "_get_UPS2_INVERTER_VOLTS", _0_Control.MountVertexLLamaBase._d__get_UPS2_INVERTER_VOLTS, args)

    def _get_UPS2_OUTPUT_CURRENT(self, *args):
        return _omnipy.invoke(self, "_get_UPS2_OUTPUT_CURRENT", _0_Control.MountVertexLLamaBase._d__get_UPS2_OUTPUT_CURRENT, args)

    def _get_UPS2_OUTPUT_VOLTS(self, *args):
        return _omnipy.invoke(self, "_get_UPS2_OUTPUT_VOLTS", _0_Control.MountVertexLLamaBase._d__get_UPS2_OUTPUT_VOLTS, args)

    def _get_UPS_STATUS_1(self, *args):
        return _omnipy.invoke(self, "_get_UPS_STATUS_1", _0_Control.MountVertexLLamaBase._d__get_UPS_STATUS_1, args)

    def _get_UPS_STATUS_2(self, *args):
        return _omnipy.invoke(self, "_get_UPS_STATUS_2", _0_Control.MountVertexLLamaBase._d__get_UPS_STATUS_2, args)

    def GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER(self, *args):
        return _omnipy.invoke(self, "GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER", _0_Control.MountVertexLLamaBase._d_GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER, args)

    def GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN(self, *args):
        return _omnipy.invoke(self, "GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN", _0_Control.MountVertexLLamaBase._d_GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN, args)

    def GET_EMERGENCY_STOP_NASMYTH_CABINS_AB(self, *args):
        return _omnipy.invoke(self, "GET_EMERGENCY_STOP_NASMYTH_CABINS_AB", _0_Control.MountVertexLLamaBase._d_GET_EMERGENCY_STOP_NASMYTH_CABINS_AB, args)

    def GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL(self, *args):
        return _omnipy.invoke(self, "GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL", _0_Control.MountVertexLLamaBase._d_GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL, args)

    def GET_EMERGENCY_STOP_CONTROL_CONTAINER(self, *args):
        return _omnipy.invoke(self, "GET_EMERGENCY_STOP_CONTROL_CONTAINER", _0_Control.MountVertexLLamaBase._d_GET_EMERGENCY_STOP_CONTROL_CONTAINER, args)

    def GET_COMMUNICATION_ERROR_ACU_UPS2(self, *args):
        return _omnipy.invoke(self, "GET_COMMUNICATION_ERROR_ACU_UPS2", _0_Control.MountVertexLLamaBase._d_GET_COMMUNICATION_ERROR_ACU_UPS2, args)

    def GET_METR_DELTAS_DISP(self, *args):
        return _omnipy.invoke(self, "GET_METR_DELTAS_DISP", _0_Control.MountVertexLLamaBase._d_GET_METR_DELTAS_DISP, args)

    def GET_METR_DELTAS_SPEM(self, *args):
        return _omnipy.invoke(self, "GET_METR_DELTAS_SPEM", _0_Control.MountVertexLLamaBase._d_GET_METR_DELTAS_SPEM, args)

    def GET_METR_DELTAS_TILT(self, *args):
        return _omnipy.invoke(self, "GET_METR_DELTAS_TILT", _0_Control.MountVertexLLamaBase._d_GET_METR_DELTAS_TILT, args)

    def GET_METR_DELTAS_TILTTEMP(self, *args):
        return _omnipy.invoke(self, "GET_METR_DELTAS_TILTTEMP", _0_Control.MountVertexLLamaBase._d_GET_METR_DELTAS_TILTTEMP, args)

    def GET_METR_TEMPS_19(self, *args):
        return _omnipy.invoke(self, "GET_METR_TEMPS_19", _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_19, args)

    def GET_METR_TEMPS_1A(self, *args):
        return _omnipy.invoke(self, "GET_METR_TEMPS_1A", _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1A, args)

    def GET_METR_TEMPS_1B(self, *args):
        return _omnipy.invoke(self, "GET_METR_TEMPS_1B", _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1B, args)

    def GET_METR_TEMPS_1C(self, *args):
        return _omnipy.invoke(self, "GET_METR_TEMPS_1C", _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1C, args)

    def GET_METR_TEMPS_1D(self, *args):
        return _omnipy.invoke(self, "GET_METR_TEMPS_1D", _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1D, args)

    def GET_METR_TEMPS_1E(self, *args):
        return _omnipy.invoke(self, "GET_METR_TEMPS_1E", _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1E, args)

    def GET_METR_TEMPS_1F(self, *args):
        return _omnipy.invoke(self, "GET_METR_TEMPS_1F", _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1F, args)

    def GET_SUBREF_DELTA_ROT(self, *args):
        return _omnipy.invoke(self, "GET_SUBREF_DELTA_ROT", _0_Control.MountVertexLLamaBase._d_GET_SUBREF_DELTA_ROT, args)

    def GET_OTHER_STATUS(self, *args):
        return _omnipy.invoke(self, "GET_OTHER_STATUS", _0_Control.MountVertexLLamaBase._d_GET_OTHER_STATUS, args)

    def GET_UPS2_ALARMS(self, *args):
        return _omnipy.invoke(self, "GET_UPS2_ALARMS", _0_Control.MountVertexLLamaBase._d_GET_UPS2_ALARMS, args)

    def GET_UPS2_BATTERY_OUTPUT(self, *args):
        return _omnipy.invoke(self, "GET_UPS2_BATTERY_OUTPUT", _0_Control.MountVertexLLamaBase._d_GET_UPS2_BATTERY_OUTPUT, args)

    def GET_UPS2_BATTERY_STATUS(self, *args):
        return _omnipy.invoke(self, "GET_UPS2_BATTERY_STATUS", _0_Control.MountVertexLLamaBase._d_GET_UPS2_BATTERY_STATUS, args)

    def GET_UPS2_BYPASS_VOLTS(self, *args):
        return _omnipy.invoke(self, "GET_UPS2_BYPASS_VOLTS", _0_Control.MountVertexLLamaBase._d_GET_UPS2_BYPASS_VOLTS, args)

    def GET_UPS2_FREQS(self, *args):
        return _omnipy.invoke(self, "GET_UPS2_FREQS", _0_Control.MountVertexLLamaBase._d_GET_UPS2_FREQS, args)

    def GET_UPS1_INVERTER_SW(self, *args):
        return _omnipy.invoke(self, "GET_UPS1_INVERTER_SW", _0_Control.MountVertexLLamaBase._d_GET_UPS1_INVERTER_SW, args)

    def GET_UPS2_INVERTER_SW(self, *args):
        return _omnipy.invoke(self, "GET_UPS2_INVERTER_SW", _0_Control.MountVertexLLamaBase._d_GET_UPS2_INVERTER_SW, args)

    def GET_UPS2_INVERTER_VOLTS(self, *args):
        return _omnipy.invoke(self, "GET_UPS2_INVERTER_VOLTS", _0_Control.MountVertexLLamaBase._d_GET_UPS2_INVERTER_VOLTS, args)

    def GET_UPS2_OUTPUT_CURRENT(self, *args):
        return _omnipy.invoke(self, "GET_UPS2_OUTPUT_CURRENT", _0_Control.MountVertexLLamaBase._d_GET_UPS2_OUTPUT_CURRENT, args)

    def GET_UPS2_OUTPUT_VOLTS(self, *args):
        return _omnipy.invoke(self, "GET_UPS2_OUTPUT_VOLTS", _0_Control.MountVertexLLamaBase._d_GET_UPS2_OUTPUT_VOLTS, args)

    def GET_UPS_STATUS_1(self, *args):
        return _omnipy.invoke(self, "GET_UPS_STATUS_1", _0_Control.MountVertexLLamaBase._d_GET_UPS_STATUS_1, args)

    def GET_UPS_STATUS_2(self, *args):
        return _omnipy.invoke(self, "GET_UPS_STATUS_2", _0_Control.MountVertexLLamaBase._d_GET_UPS_STATUS_2, args)

    def SET_SUBREF_DELTA_ROT(self, *args):
        return _omnipy.invoke(self, "SET_SUBREF_DELTA_ROT", _0_Control.MountVertexLLamaBase._d_SET_SUBREF_DELTA_ROT, args)

    def SET_SELFTEST_STOP(self, *args):
        return _omnipy.invoke(self, "SET_SELFTEST_STOP", _0_Control.MountVertexLLamaBase._d_SET_SELFTEST_STOP, args)

    __methods__ = ["_get_METR_DELTAS_DISP", "_get_METR_DELTAS_SPEM", "_get_METR_DELTAS_TILT", "_get_METR_DELTAS_TILTTEMP", "_get_METR_TEMPS_19", "_get_METR_TEMPS_1A", "_get_METR_TEMPS_1B", "_get_METR_TEMPS_1C", "_get_METR_TEMPS_1D", "_get_METR_TEMPS_1E", "_get_METR_TEMPS_1F", "_get_SUBREF_DELTA_ROT", "_get_OTHER_STATUS", "_get_UPS2_ALARMS", "_get_UPS2_BATTERY_OUTPUT", "_get_UPS2_BATTERY_STATUS", "_get_UPS2_BYPASS_VOLTS", "_get_UPS2_FREQS", "_get_UPS1_INVERTER_SW", "_get_UPS2_INVERTER_SW", "_get_UPS2_INVERTER_VOLTS", "_get_UPS2_OUTPUT_CURRENT", "_get_UPS2_OUTPUT_VOLTS", "_get_UPS_STATUS_1", "_get_UPS_STATUS_2", "GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER", "GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN", "GET_EMERGENCY_STOP_NASMYTH_CABINS_AB", "GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL", "GET_EMERGENCY_STOP_CONTROL_CONTAINER", "GET_COMMUNICATION_ERROR_ACU_UPS2", "GET_METR_DELTAS_DISP", "GET_METR_DELTAS_SPEM", "GET_METR_DELTAS_TILT", "GET_METR_DELTAS_TILTTEMP", "GET_METR_TEMPS_19", "GET_METR_TEMPS_1A", "GET_METR_TEMPS_1B", "GET_METR_TEMPS_1C", "GET_METR_TEMPS_1D", "GET_METR_TEMPS_1E", "GET_METR_TEMPS_1F", "GET_SUBREF_DELTA_ROT", "GET_OTHER_STATUS", "GET_UPS2_ALARMS", "GET_UPS2_BATTERY_OUTPUT", "GET_UPS2_BATTERY_STATUS", "GET_UPS2_BYPASS_VOLTS", "GET_UPS2_FREQS", "GET_UPS1_INVERTER_SW", "GET_UPS2_INVERTER_SW", "GET_UPS2_INVERTER_VOLTS", "GET_UPS2_OUTPUT_CURRENT", "GET_UPS2_OUTPUT_VOLTS", "GET_UPS_STATUS_1", "GET_UPS_STATUS_2", "SET_SUBREF_DELTA_ROT", "SET_SELFTEST_STOP"] + _0_Control._objref_MountVertex.__methods__

omniORB.registerObjref(MountVertexLLamaBase._NP_RepositoryId, _objref_MountVertexLLamaBase)
_0_Control._objref_MountVertexLLamaBase = _objref_MountVertexLLamaBase
del MountVertexLLamaBase, _objref_MountVertexLLamaBase

# MountVertexLLamaBase skeleton
__name__ = "Control__POA"
class MountVertexLLamaBase (_0_Control__POA.MountVertex):
    _NP_RepositoryId = _0_Control.MountVertexLLamaBase._NP_RepositoryId


    _omni_op_d = {"_get_METR_DELTAS_DISP": _0_Control.MountVertexLLamaBase._d__get_METR_DELTAS_DISP, "_get_METR_DELTAS_SPEM": _0_Control.MountVertexLLamaBase._d__get_METR_DELTAS_SPEM, "_get_METR_DELTAS_TILT": _0_Control.MountVertexLLamaBase._d__get_METR_DELTAS_TILT, "_get_METR_DELTAS_TILTTEMP": _0_Control.MountVertexLLamaBase._d__get_METR_DELTAS_TILTTEMP, "_get_METR_TEMPS_19": _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_19, "_get_METR_TEMPS_1A": _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1A, "_get_METR_TEMPS_1B": _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1B, "_get_METR_TEMPS_1C": _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1C, "_get_METR_TEMPS_1D": _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1D, "_get_METR_TEMPS_1E": _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1E, "_get_METR_TEMPS_1F": _0_Control.MountVertexLLamaBase._d__get_METR_TEMPS_1F, "_get_SUBREF_DELTA_ROT": _0_Control.MountVertexLLamaBase._d__get_SUBREF_DELTA_ROT, "_get_OTHER_STATUS": _0_Control.MountVertexLLamaBase._d__get_OTHER_STATUS, "_get_UPS2_ALARMS": _0_Control.MountVertexLLamaBase._d__get_UPS2_ALARMS, "_get_UPS2_BATTERY_OUTPUT": _0_Control.MountVertexLLamaBase._d__get_UPS2_BATTERY_OUTPUT, "_get_UPS2_BATTERY_STATUS": _0_Control.MountVertexLLamaBase._d__get_UPS2_BATTERY_STATUS, "_get_UPS2_BYPASS_VOLTS": _0_Control.MountVertexLLamaBase._d__get_UPS2_BYPASS_VOLTS, "_get_UPS2_FREQS": _0_Control.MountVertexLLamaBase._d__get_UPS2_FREQS, "_get_UPS1_INVERTER_SW": _0_Control.MountVertexLLamaBase._d__get_UPS1_INVERTER_SW, "_get_UPS2_INVERTER_SW": _0_Control.MountVertexLLamaBase._d__get_UPS2_INVERTER_SW, "_get_UPS2_INVERTER_VOLTS": _0_Control.MountVertexLLamaBase._d__get_UPS2_INVERTER_VOLTS, "_get_UPS2_OUTPUT_CURRENT": _0_Control.MountVertexLLamaBase._d__get_UPS2_OUTPUT_CURRENT, "_get_UPS2_OUTPUT_VOLTS": _0_Control.MountVertexLLamaBase._d__get_UPS2_OUTPUT_VOLTS, "_get_UPS_STATUS_1": _0_Control.MountVertexLLamaBase._d__get_UPS_STATUS_1, "_get_UPS_STATUS_2": _0_Control.MountVertexLLamaBase._d__get_UPS_STATUS_2, "GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER": _0_Control.MountVertexLLamaBase._d_GET_EMERGENCY_STOP_AZ_DRIVES_EQUIP_CONTAINER, "GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN": _0_Control.MountVertexLLamaBase._d_GET_EMERGENCY_STOP_PLATFORM_2_RECV_CABIN, "GET_EMERGENCY_STOP_NASMYTH_CABINS_AB": _0_Control.MountVertexLLamaBase._d_GET_EMERGENCY_STOP_NASMYTH_CABINS_AB, "GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL": _0_Control.MountVertexLLamaBase._d_GET_EMERGENCY_STOP_ACESS_TO_PLATFORM_OUTSIDE_PEDESTAL, "GET_EMERGENCY_STOP_CONTROL_CONTAINER": _0_Control.MountVertexLLamaBase._d_GET_EMERGENCY_STOP_CONTROL_CONTAINER, "GET_COMMUNICATION_ERROR_ACU_UPS2": _0_Control.MountVertexLLamaBase._d_GET_COMMUNICATION_ERROR_ACU_UPS2, "GET_METR_DELTAS_DISP": _0_Control.MountVertexLLamaBase._d_GET_METR_DELTAS_DISP, "GET_METR_DELTAS_SPEM": _0_Control.MountVertexLLamaBase._d_GET_METR_DELTAS_SPEM, "GET_METR_DELTAS_TILT": _0_Control.MountVertexLLamaBase._d_GET_METR_DELTAS_TILT, "GET_METR_DELTAS_TILTTEMP": _0_Control.MountVertexLLamaBase._d_GET_METR_DELTAS_TILTTEMP, "GET_METR_TEMPS_19": _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_19, "GET_METR_TEMPS_1A": _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1A, "GET_METR_TEMPS_1B": _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1B, "GET_METR_TEMPS_1C": _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1C, "GET_METR_TEMPS_1D": _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1D, "GET_METR_TEMPS_1E": _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1E, "GET_METR_TEMPS_1F": _0_Control.MountVertexLLamaBase._d_GET_METR_TEMPS_1F, "GET_SUBREF_DELTA_ROT": _0_Control.MountVertexLLamaBase._d_GET_SUBREF_DELTA_ROT, "GET_OTHER_STATUS": _0_Control.MountVertexLLamaBase._d_GET_OTHER_STATUS, "GET_UPS2_ALARMS": _0_Control.MountVertexLLamaBase._d_GET_UPS2_ALARMS, "GET_UPS2_BATTERY_OUTPUT": _0_Control.MountVertexLLamaBase._d_GET_UPS2_BATTERY_OUTPUT, "GET_UPS2_BATTERY_STATUS": _0_Control.MountVertexLLamaBase._d_GET_UPS2_BATTERY_STATUS, "GET_UPS2_BYPASS_VOLTS": _0_Control.MountVertexLLamaBase._d_GET_UPS2_BYPASS_VOLTS, "GET_UPS2_FREQS": _0_Control.MountVertexLLamaBase._d_GET_UPS2_FREQS, "GET_UPS1_INVERTER_SW": _0_Control.MountVertexLLamaBase._d_GET_UPS1_INVERTER_SW, "GET_UPS2_INVERTER_SW": _0_Control.MountVertexLLamaBase._d_GET_UPS2_INVERTER_SW, "GET_UPS2_INVERTER_VOLTS": _0_Control.MountVertexLLamaBase._d_GET_UPS2_INVERTER_VOLTS, "GET_UPS2_OUTPUT_CURRENT": _0_Control.MountVertexLLamaBase._d_GET_UPS2_OUTPUT_CURRENT, "GET_UPS2_OUTPUT_VOLTS": _0_Control.MountVertexLLamaBase._d_GET_UPS2_OUTPUT_VOLTS, "GET_UPS_STATUS_1": _0_Control.MountVertexLLamaBase._d_GET_UPS_STATUS_1, "GET_UPS_STATUS_2": _0_Control.MountVertexLLamaBase._d_GET_UPS_STATUS_2, "SET_SUBREF_DELTA_ROT": _0_Control.MountVertexLLamaBase._d_SET_SUBREF_DELTA_ROT, "SET_SELFTEST_STOP": _0_Control.MountVertexLLamaBase._d_SET_SELFTEST_STOP}
    _omni_op_d.update(_0_Control__POA.MountVertex._omni_op_d)

MountVertexLLamaBase._omni_skeleton = MountVertexLLamaBase
_0_Control__POA.MountVertexLLamaBase = MountVertexLLamaBase
omniORB.registerSkeleton(MountVertexLLamaBase._NP_RepositoryId, MountVertexLLamaBase)
del MountVertexLLamaBase
__name__ = "Control"

#
# End of module "Control"
#
__name__ = "MountVertexLLamaBase_idl"

_exported_modules = ( "Control", )

# The end.
